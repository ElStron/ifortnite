---
import type { Item } from "@/models/shop.type.ts";
import Link from "@/components/Link.astro";
import { HOVER } from "@/constants";

interface Props {
    item: Item;
}
const { item } = Astro.props;
const displayNameLower = item.displayName;
if (!displayNameLower) {
    console.error("No displayName", item);
}
const isBundleOrLote = displayNameLower.includes("bundle") || displayNameLower.includes("lote");
const isOutfit = item.displayType === "Outfit" || item.displayType === "Traje";

const bundle = isBundleOrLote ? "row-span-2 col-span-2" :
               isOutfit ? "row-span-2 col-span-1" :
               "row-span-1 col-span-1";

const granted = item.granted.map((granted) => granted.images.background).join(', ');
---

<li class={`${bundle} rounded-lg relative ${HOVER}`} >
    <Link href={`/cosmetic/${item.mainId}`} class={`w-full h-full`}>
        <img 
            class="w-full h-full object-cover object-top rounded-lg" 
            src={item.displayAssets[0].background} 
            alt={item.displayName} 
            data-imgs={granted} 
            loading="lazy"
        />
        <span class="flex flex-col text-slate-900 text-sm font-medium dark:text-slate-200 absolute bottom-2 left-2">
            <h3>{item.displayName}</h3>
            <span>
                <span class="bg-white text-slate-900 font-bold px-1 rounded-full max-w-[max-content] text-opacity-75">V</span>
                <strong class="">{item.price.finalPrice}</strong>
                {
                    item.price.finalPrice < item.price.regularPrice && 
                    <span class="text-gray-400 line-through">{item.price.regularPrice}</span>
                }
            </span>
        </span>
        {
            item.banner && 
            <span class="text-sm font-nomal text-black bg-yellow-400 m-2 px-2 py-1 rounded-sm absolute top-0 left-0">
                {item.banner.name}
            </span>
        }
    </Link>
</li>